const PATH = "/models/raspberry-transformed.glb";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 raspberry.glb --types --transform --keepnames
Files: raspberry.glb [5.94MB] > /Users/jarno/dev/projects/dev/portfolio3d/_benodigdheden/models/raspberrypi/raspberry-transformed.glb [361.87KB] (94%)
Author: objets3D (https://sketchfab.com/objets3D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/raspberry-d045eaf534384d9eb926245a5a09ead4
Title: Raspberry
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_3: THREE.Mesh;
  };
  materials: {
    rpi_L: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[]
};

export function RaspberryPiModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(PATH) as GLTF as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="Object_3"
        geometry={nodes.Object_3.geometry}
        material={materials.rpi_L}
        position={[-30.818, -64.314, 50.115]}
        rotation={[-1.278, -0.539, 0.426]}
      />
    </group>
  );
}

useGLTF.preload(PATH);
