const PATH = "/models/gamepad-transformed.glb";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 gamepad.glb --types --keepnames --transform -K
Files: gamepad.glb [3.83MB] > /Users/jarno/dev/sandbox/unity/PS4 cotroller/models/game-controller/source/gamepad-transformed.glb [528.15KB] (86%)
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { JSX, useRef } from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type ActionName =
  | "cgaxis_models_74_25_01|Take 001|BaseLayer"
  | "cgaxis_models_74_25_02|Take 001|BaseLayer"
  | "cgaxis_models_74_25_07|Take 001|BaseLayer"
  | "cgaxis_models_74_25_06|Take 001|BaseLayer"
  | "cgaxis_models_74_25_05|Take 001|BaseLayer"
  | "cgaxis_models_74_25_04|Take 001|BaseLayer"
  | "cgaxis_models_74_25_03|Take 001|BaseLayer"
  | "cgaxis_models_74_25_08|Take 001|BaseLayer";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    cgaxis_models_74_25_01: THREE.Mesh;
    cgaxis_models_74_25_02: THREE.Mesh;
    cgaxis_models_74_25_07: THREE.Mesh;
    cgaxis_models_74_25_06: THREE.Mesh;
    cgaxis_models_74_25_05: THREE.Mesh;
    cgaxis_models_74_25_04: THREE.Mesh;
    cgaxis_models_74_25_03: THREE.Mesh;
    cgaxis_models_74_25_08: THREE.Mesh;
  };
  materials: {
    ["材质.7"]: THREE.MeshStandardMaterial;
    ["材质.6"]: THREE.MeshStandardMaterial;
    材质: THREE.MeshStandardMaterial;
    ["材质.2"]: THREE.MeshStandardMaterial;
    ["材质.3"]: THREE.MeshStandardMaterial;
    ["材质.4"]: THREE.MeshStandardMaterial;
    ["材质.5"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function GamepadModel(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(PATH) as GLTF as GLTFResult;
  // const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="cgaxis_models_74_25_01"
          geometry={nodes.cgaxis_models_74_25_01.geometry}
          material={materials["材质.7"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_02"
          geometry={nodes.cgaxis_models_74_25_02.geometry}
          material={materials["材质.6"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_07"
          geometry={nodes.cgaxis_models_74_25_07.geometry}
          material={materials.材质}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_06"
          geometry={nodes.cgaxis_models_74_25_06.geometry}
          material={materials["材质.2"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_05"
          geometry={nodes.cgaxis_models_74_25_05.geometry}
          material={materials["材质.3"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_04"
          geometry={nodes.cgaxis_models_74_25_04.geometry}
          material={materials["材质.4"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_03"
          geometry={nodes.cgaxis_models_74_25_03.geometry}
          material={materials["材质.5"]}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
        <mesh
          name="cgaxis_models_74_25_08"
          geometry={nodes.cgaxis_models_74_25_08.geometry}
          material={materials.材质}
          rotation={[0.85, 0, 0]}
          scale={0.01}
        />
      </group>
    </group>
  );
}

useGLTF.preload(PATH);
