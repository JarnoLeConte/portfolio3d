import { useSpring, animated, useSpringValue, easings } from "@react-spring/three";
import { useGLTF } from "@react-three/drei";
import { Suspense, useRef } from "react";
import * as THREE from "three";
import type { GLTF } from "three-stdlib";
import { ScreenMaterial } from "../materials/screen.material";

/**
 * Custom type for the GLTF model result.
 * TODO: auto generate this type using gltfjsx or similar tools.
 */
type GLTFResult = GLTF & {
  nodes: {
    Cube008: THREE.Mesh;
    Cube008_1: THREE.Mesh;
    Cube008_2: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    touchbar: THREE.Mesh;
    keyboard: THREE.Mesh;
  };
  materials: {
    aluminium: THREE.MeshStandardMaterial;
    touchbar: THREE.MeshStandardMaterial;
    trackpad: THREE.MeshStandardMaterial;
    keys: THREE.MeshStandardMaterial;
    "matte.001": THREE.MeshStandardMaterial;
    "screen.001": THREE.MeshStandardMaterial;
  };
};

export function Laptop({
  open,
  videoSource,
}: {
  open: boolean;
  videoSource?: string;
}) {
  const group = useRef<THREE.Mesh>(null);

  // Load model
  const { nodes, materials } = useGLTF(
    "/models/mac-draco.glb"
  ) as unknown as GLTFResult;

  const { hinge } = useSpring({
    hinge: open ? -0.425 : 1.575,
    config: { duration: 1500, easing: easings.easeInOutCubic },
  });

  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group ref={group} dispose={null}>
      <animated.group rotation-x={hinge} position={[0, -0.04, 0.41]}>
        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            material={materials.aluminium}
            geometry={nodes["Cube008"].geometry}
          />
          <mesh
            material={materials["matte.001"]}
            geometry={nodes["Cube008_1"].geometry}
          />
          <mesh
            material={materials["screen.001"]} // TODO: adjust Loading screen material
            geometry={nodes["Cube008_2"].geometry}
          >
            <Suspense fallback={null}>
              {videoSource && <ScreenMaterial videoSource={videoSource} />}
            </Suspense>
          </mesh>
        </group>
      </animated.group>
      <mesh
        material={materials.keys}
        geometry={nodes.keyboard.geometry}
        position={[1.79, 0, 3.45]}
      />
      <group position={[0, -0.1, 3.39]}>
        <mesh
          material={materials.aluminium}
          geometry={nodes["Cube002"].geometry}
        />
        <mesh
          material={materials.trackpad}
          geometry={nodes["Cube002_1"].geometry}
        />
      </group>
      <mesh
        material={materials.touchbar}
        geometry={nodes.touchbar.geometry}
        position={[0, -0.03, 1.2]}
      />
    </group>
  );
}
